{"version":3,"sources":["todos/actions.js","todos/reducers.js","App.js","todos/thunk.js","todos/selectors.js","todos/NewTodoForm.js","todos/TodoListItem.js","todos/TodoList.js","store.js","index.js"],"names":["CREATE_TODO","createTodo","todo","type","payload","REMOVE_TODO","removeTodo","MARK_TODO_AS_COMPLETED","markTodoAsCompleted","LOAD_TODOS_IN_PROGRESS","loadTodosInProgress","LOAD_TODOS_IN_SUCCESS","loadTodosSuccess","todos","LOAD_TODOS_IN_FAILURE","loadTodosFailure","initialState","isLoading","data","state","action","concat","console","log","todoToRemove","filter","id","completedTodo","map","isCompleted","hot","module","className","displayAlert","text","alert","getTodos","getTodosLoading","getIncompleteTodos","createSelector","getCompletedTodos","connect","dispatch","onCreatePressed","a","body","JSON","stringify","fetch","headers","method","response","json","addTodoRequest","useState","inputValue","setInputValue","placeholder","value","onChange","e","target","onClick","some","TodoListItem","onRemovePressed","onCompletedPressed","completedTodos","incompleteTodos","startLoadingTodos","getState","removeTodos","deleteTodoRequest","completeTodoRequest","useEffect","loadingMessage","content","reducers","persistConfig","key","storage","stateReconciler","autoMergeLevel2","rootReducer","combineReducers","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","App","document","getElementById"],"mappings":"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","file":"static/js/main.09777640.chunk.js","sourcesContent":["export const CREATE_TODO = 'CREATE_TODO';\r\nexport const createTodo = todo => ({\r\n    type: CREATE_TODO,\r\n    payload: { todo },\r\n});\r\n\r\nexport const REMOVE_TODO = 'REMOVE_TODO';\r\nexport const removeTodo = todo => ({\r\n    type: REMOVE_TODO,\r\n    payload: { todo },\r\n});\r\n\r\nexport const MARK_TODO_AS_COMPLETED = 'MARK_TODO_AS_COMPLETED';\r\nexport const markTodoAsCompleted = todo => ({\r\n    type: MARK_TODO_AS_COMPLETED,\r\n    payload: { todo },\r\n});\r\n\r\nexport const LOAD_TODOS_IN_PROGRESS = 'LOAD_TODOS_IN_PROGRESS';\r\nexport const loadTodosInProgress = () => ({\r\n    type: LOAD_TODOS_IN_PROGRESS,\r\n});\r\n\r\nexport const LOAD_TODOS_IN_SUCCESS = 'LOAD_TODOS_IN_SUCCESS';\r\nexport const loadTodosSuccess = todos => ({\r\n    type: LOAD_TODOS_IN_SUCCESS,\r\n    payload: {todos} \r\n});\r\n\r\nexport const LOAD_TODOS_IN_FAILURE = 'LOAD_TODOS_IN_FAILURE';\r\nexport const loadTodosFailure = () => ({\r\n    type: LOAD_TODOS_IN_FAILURE,\r\n});","import { CREATE_TODO, REMOVE_TODO, MARK_TODO_AS_COMPLETED, \r\n    LOAD_TODOS_IN_PROGRESS, LOAD_TODOS_IN_FAILURE, LOAD_TODOS_IN_SUCCESS } from './actions';\r\n\r\n// export const isLoading = (state= false, action) => {\r\n//     const {type} = action;\r\n\r\n//     switch(type) {\r\n//         case LOAD_TODOS_IN_PROGRESS:\r\n//             return true;\r\n        \r\n//         case LOAD_TODOS_IN_SUCCESS:\r\n//             return false;\r\n//         case LOAD_TODOS_IN_FAILURE:\r\n//             return false;\r\n//         default: \r\n//             return state;\r\n//     }\r\n// }\r\n\r\nconst initialState = {isLoading: false, data : []};\r\n\r\nexport const todos = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n    case CREATE_TODO: {\r\n        const { todo } = payload;\r\n        return {\r\n            ...state,\r\n            data: state.data.concat(todo),\r\n        }\r\n    }\r\n    case REMOVE_TODO: {\r\n        console.log('payload=====>', payload);\r\n        const { todo: todoToRemove } = payload;\r\n        return {\r\n            ...state,\r\n            data: state.data.filter(todo => todo.id !== todoToRemove.id),\r\n        }\r\n    }\r\n    case MARK_TODO_AS_COMPLETED: {\r\n        const { todo: completedTodo } = payload;\r\n        return {...state,\r\n            data: state.data.map(todo => {\r\n            if (todo.id === completedTodo.id) {\r\n                return { ...todo, isCompleted: true };\r\n            }\r\n            return todo;\r\n        })\r\n    };\r\n    }\r\n\r\n    case LOAD_TODOS_IN_SUCCESS: {\r\n        const {todos} = payload;\r\n        return {...state, \r\n            isLoading: false,\r\n            data: todos,\r\n        };\r\n    }\r\n\r\n    case LOAD_TODOS_IN_FAILURE: {\r\n        return {\r\n            ...state,\r\n            isLoading: false,\r\n        }\r\n    }\r\n    case LOAD_TODOS_IN_PROGRESS: {\r\n        return {\r\n            ...state,\r\n            isLoading: true,\r\n        }\r\n    }\r\n\r\n    default:\r\n        return state;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {hot}  from  'react-hot-loader'\r\nimport './App.css';\r\nimport TodoList from './todos/TodoList';\r\nconst App = () => (\r\n    <div className=\"App\">\r\n        <TodoList />\r\n    </div>\r\n)\r\n\r\nexport default hot(module)(App);","import { loadTodosFailure, loadTodosInProgress, loadTodosSuccess, createTodo, removeTodo, markTodoAsCompleted} from './actions';\r\n\r\nexport const displayAlert = (text) => () => {\r\n    alert(text);\r\n};\r\n\r\nexport const loadTodo = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch(loadTodosInProgress());\r\n        const response = await fetch('http://localhost:8080/todos-delay')\r\n        const todos = await response.json();\r\n\r\n        dispatch(loadTodosSuccess(todos));\r\n    } catch (error) {\r\n        dispatch(loadTodosFailure());\r\n        dispatch(displayAlert('Error'));\r\n    }\r\n    \r\n}\r\n\r\nexport const addTodoRequest = text => async dispatch => {\r\n    try {\r\n        const body = JSON.stringify({text});\r\n        const response  = await fetch('http://localhost:8080/todos',{\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            method: 'post',\r\n            body\r\n        });\r\n        const todo = await response.json();\r\n        dispatch(createTodo(todo));\r\n    } catch (error) {\r\n        dispatch(displayAlert('Error'));\r\n    }\r\n}\r\n\r\nexport const deleteTodoRequest = id => async dispatch => {\r\n    try {\r\n        const response  = await fetch(`http://localhost:8080/todos/${id}`, {\r\n            method:'delete'\r\n        });\r\n        const removeTodos = await response.json();\r\n        dispatch(removeTodo(removeTodos));\r\n    } catch (error) {\r\n        dispatch(displayAlert('Error'));\r\n    }\r\n}\r\n\r\nexport const completeTodoRequest = id => async dispatch => {\r\n    try {\r\n        const response  = await fetch(`http://localhost:8080/todos/${id}/completed`,{\r\n            method: 'POST'\r\n        });\r\n        const completedTodo = await response.json();\r\n        debugger;\r\n        dispatch(markTodoAsCompleted(completedTodo));\r\n    } catch (error) {\r\n        dispatch(displayAlert('Error'));\r\n    }\r\n}","import { todos } from \"./reducers\";\r\nimport {createSelector }  from 'reselect';\r\nexport const getTodos = state => state.todos.data;\r\nexport const getTodosLoading = state => state.todos.isLoading;\r\n\r\nexport const getIncompleteTodos = createSelector(\r\n    getTodos,\r\n    (todos) => todos.filter(todo => !todo.isCompleted),\r\n)\r\n\r\nexport const getCompletedTodos = createSelector(\r\n    getTodos,\r\n    (todos) => todos.filter(todo => todo.isCompleted),\r\n)","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addTodoRequest } from './thunk';\r\nimport './NewTodoForm.css';\r\nimport { getTodos } from './selectors';\r\nconst NewTodoForm = ({ todos, onCreatePressed }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    return (\r\n        <div className=\"new-todo-form\">\r\n            <input\r\n                className=\"new-todo-input\"\r\n                type=\"text\"\r\n                placeholder=\"Type your new todo here\"\r\n                value={inputValue}\r\n                onChange={e => setInputValue(e.target.value)} />\r\n            <button\r\n                onClick={() => {\r\n                    const isDuplicateText =\r\n                        todos.some(todo => todo.text === inputValue);\r\n                    if (!isDuplicateText) {\r\n                        onCreatePressed(inputValue);\r\n                        setInputValue('');\r\n                    }\r\n                }}\r\n                className=\"new-todo-button\">\r\n                Create Todo\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    todos: getTodos(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onCreatePressed: text => dispatch(addTodoRequest(text)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTodoForm);","import React from 'react';\r\nimport './TodoListItem.css';\r\n\r\nconst TodoListItem = ({ todo, onRemovePressed, onCompletedPressed }) => (\r\n    <div className=\"todo-item-container\">\r\n        <h3>{todo.text}</h3>\r\n        <div className=\"buttons-container\">\r\n            {todo.isCompleted\r\n                ? null\r\n                : <button\r\n                    onClick={() => onCompletedPressed(todo.id)}\r\n                    className=\"completed-button\">Mark As Completed</button>}\r\n            <button\r\n                onClick={() => onRemovePressed(todo.id)}\r\n                className=\"remove-button\">Remove</button>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default TodoListItem;","import React, {useEffect} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport NewTodoForm from './NewTodoForm';\r\nimport TodoListItem from './TodoListItem';\r\nimport { markTodoAsCompleted } from './actions';\r\nimport './TodoList.css';\r\nimport {loadTodo, deleteTodoRequest, completeTodoRequest } from './thunk';\r\nimport {getTodos, getTodosLoading, getCompletedTodos, getIncompleteTodos} from './selectors';\r\n\r\nconst TodoList = ({ completedTodos, incompleteTodos, onRemovePressed, onCompletedPressed, isLoading, startLoadingTodos }) => {\r\n    useEffect(() => {\r\n        startLoadingTodos()\r\n    }, []);\r\n    const loadingMessage = <div>Loading todos...</div>\r\n    const content = (\r\n    <div className=\"list-wrapper\">\r\n        <NewTodoForm />\r\n        <h3>Incomplete: </h3>\r\n        {incompleteTodos.map(todo => <TodoListItem\r\n            todo={todo}\r\n            onRemovePressed={onRemovePressed}\r\n            onCompletedPressed={onCompletedPressed}/>)}\r\n        <h3>completed: </h3>\r\n        {completedTodos.map(todo => <TodoListItem\r\n            todo={todo}\r\n            onRemovePressed={onRemovePressed}\r\n            onCompletedPressed={onCompletedPressed}/>)}\r\n    </div>\r\n);\r\nreturn isLoading ? loadingMessage : content;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoading: getTodosLoading(state),\r\n    todos: getTodos(state),\r\n    completedTodos: getCompletedTodos(state),\r\n    incompleteTodos: getIncompleteTodos(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    startLoadingTodos: () => dispatch(loadTodo()),\r\n    onRemovePressed: id => dispatch(deleteTodoRequest(id)),\r\n    onCompletedPressed: id => dispatch(completeTodoRequest(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoList);","import { createStore, combineReducers,applyMiddleware } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport { todos } from './todos/reducers';\r\nimport thunk from 'redux-thunk';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\nconst reducers = {\r\n    todos\r\n};\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: autoMergeLevel2,\r\n}\r\n\r\nconst rootReducer = combineReducers(reducers);\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const configureStore = () =>\r\n    createStore(\r\n        persistedReducer,\r\n        composeWithDevTools(\r\n            applyMiddleware(thunk)\r\n        )\r\n    );","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { persistStore } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/lib/integration/react';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './store';\r\nimport App from './App.js';\r\n\r\nconst store = configureStore();\r\nconst persistor = persistStore(store);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate\r\n            loading={<div>Loading...</div>}\r\n            persistor={persistor}>\r\n            <App />\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.getElementById('root'),\r\n);"],"sourceRoot":""}